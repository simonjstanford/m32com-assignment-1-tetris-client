//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace TetrisClient.TetrisWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://M32COM-Tetris.org/", ConfigurationName="TetrisWebService.TetrisWebServiceSoap")]
    public interface TetrisWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/StartGame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStartGame(TetrisClient.TetrisWebService.StartGameRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.StartGameResponse EndStartGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/GetGameState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetGameState(System.AsyncCallback callback, object asyncState);
        
        bool EndGetGameState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/GetBoard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetBoard(TetrisClient.TetrisWebService.GetBoardRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.GetBoardResponse EndGetBoard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/GetNextShape", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetNextShape(TetrisClient.TetrisWebService.GetNextShapeRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.GetNextShapeResponse EndGetNextShape(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/MoveBlockLeft", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMoveBlockLeft(TetrisClient.TetrisWebService.MoveBlockLeftRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.MoveBlockLeftResponse EndMoveBlockLeft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/MoveBlockRight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMoveBlockRight(TetrisClient.TetrisWebService.MoveBlockRightRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.MoveBlockRightResponse EndMoveBlockRight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/RotateBlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRotateBlock(TetrisClient.TetrisWebService.RotateBlockRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.RotateBlockResponse EndRotateBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/MoveBlockDown", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMoveBlockDown(TetrisClient.TetrisWebService.MoveBlockDownRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.MoveBlockDownResponse EndMoveBlockDown(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/DropBlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDropBlock(TetrisClient.TetrisWebService.DropBlockRequest request, System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.DropBlockResponse EndDropBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/GetScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetScore(System.AsyncCallback callback, object asyncState);
        
        int EndGetScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/GetHighScores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetHighScores(System.AsyncCallback callback, object asyncState);
        
        TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult EndGetHighScores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/SubmitScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSubmitScore(System.AsyncCallback callback, object asyncState);
        
        void EndSubmitScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://M32COM-Tetris.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartGame", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class StartGameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        public string player;
        
        public StartGameRequest() {
        }
        
        public StartGameRequest(string player) {
            this.player = player;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartGameResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class StartGameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] StartGameResult;
        
        public StartGameResponse() {
        }
        
        public StartGameResponse(string[][] StartGameResult) {
            this.StartGameResult = StartGameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBoard", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class GetBoardRequest {
        
        public GetBoardRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBoardResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class GetBoardResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetBoardResult;
        
        public GetBoardResponse() {
        }
        
        public GetBoardResponse(string[][] GetBoardResult) {
            this.GetBoardResult = GetBoardResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextShape", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class GetNextShapeRequest {
        
        public GetNextShapeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextShapeResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class GetNextShapeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetNextShapeResult;
        
        public GetNextShapeResponse() {
        }
        
        public GetNextShapeResponse(string[][] GetNextShapeResult) {
            this.GetNextShapeResult = GetNextShapeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockLeft", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockLeftRequest {
        
        public MoveBlockLeftRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockLeftResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockLeftResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] MoveBlockLeftResult;
        
        public MoveBlockLeftResponse() {
        }
        
        public MoveBlockLeftResponse(string[][] MoveBlockLeftResult) {
            this.MoveBlockLeftResult = MoveBlockLeftResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockRight", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockRightRequest {
        
        public MoveBlockRightRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockRightResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockRightResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] MoveBlockRightResult;
        
        public MoveBlockRightResponse() {
        }
        
        public MoveBlockRightResponse(string[][] MoveBlockRightResult) {
            this.MoveBlockRightResult = MoveBlockRightResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RotateBlock", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class RotateBlockRequest {
        
        public RotateBlockRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RotateBlockResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class RotateBlockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] RotateBlockResult;
        
        public RotateBlockResponse() {
        }
        
        public RotateBlockResponse(string[][] RotateBlockResult) {
            this.RotateBlockResult = RotateBlockResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockDown", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockDownRequest {
        
        public MoveBlockDownRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveBlockDownResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class MoveBlockDownResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] MoveBlockDownResult;
        
        public MoveBlockDownResponse() {
        }
        
        public MoveBlockDownResponse(string[][] MoveBlockDownResult) {
            this.MoveBlockDownResult = MoveBlockDownResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DropBlock", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class DropBlockRequest {
        
        public DropBlockRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DropBlockResponse", WrapperNamespace="http://M32COM-Tetris.org/", IsWrapped=true)]
    public partial class DropBlockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://M32COM-Tetris.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] DropBlockResult;
        
        public DropBlockResponse() {
        }
        
        public DropBlockResponse(string[][] DropBlockResult) {
            this.DropBlockResult = DropBlockResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://M32COM-Tetris.org/")]
    public partial class GetHighScoresResponseGetHighScoresResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TetrisWebServiceSoapChannel : TetrisClient.TetrisWebService.TetrisWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGameStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGameStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextShapeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextShapeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveBlockLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveBlockLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveBlockRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveBlockRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RotateBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RotateBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveBlockDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveBlockDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DropBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DropBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHighScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHighScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TetrisWebServiceSoapClient : System.ServiceModel.ClientBase<TetrisClient.TetrisWebService.TetrisWebServiceSoap>, TetrisClient.TetrisWebService.TetrisWebServiceSoap {
        
        private BeginOperationDelegate onBeginStartGameDelegate;
        
        private EndOperationDelegate onEndStartGameDelegate;
        
        private System.Threading.SendOrPostCallback onStartGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGameStateDelegate;
        
        private EndOperationDelegate onEndGetGameStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetGameStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBoardDelegate;
        
        private EndOperationDelegate onEndGetBoardDelegate;
        
        private System.Threading.SendOrPostCallback onGetBoardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextShapeDelegate;
        
        private EndOperationDelegate onEndGetNextShapeDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextShapeCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveBlockLeftDelegate;
        
        private EndOperationDelegate onEndMoveBlockLeftDelegate;
        
        private System.Threading.SendOrPostCallback onMoveBlockLeftCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveBlockRightDelegate;
        
        private EndOperationDelegate onEndMoveBlockRightDelegate;
        
        private System.Threading.SendOrPostCallback onMoveBlockRightCompletedDelegate;
        
        private BeginOperationDelegate onBeginRotateBlockDelegate;
        
        private EndOperationDelegate onEndRotateBlockDelegate;
        
        private System.Threading.SendOrPostCallback onRotateBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveBlockDownDelegate;
        
        private EndOperationDelegate onEndMoveBlockDownDelegate;
        
        private System.Threading.SendOrPostCallback onMoveBlockDownCompletedDelegate;
        
        private BeginOperationDelegate onBeginDropBlockDelegate;
        
        private EndOperationDelegate onEndDropBlockDelegate;
        
        private System.Threading.SendOrPostCallback onDropBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScoreDelegate;
        
        private EndOperationDelegate onEndGetScoreDelegate;
        
        private System.Threading.SendOrPostCallback onGetScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHighScoresDelegate;
        
        private EndOperationDelegate onEndGetHighScoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetHighScoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitScoreDelegate;
        
        private EndOperationDelegate onEndSubmitScoreDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TetrisWebServiceSoapClient() {
        }
        
        public TetrisWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TetrisWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TetrisWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TetrisWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<StartGameCompletedEventArgs> StartGameCompleted;
        
        public event System.EventHandler<GetGameStateCompletedEventArgs> GetGameStateCompleted;
        
        public event System.EventHandler<GetBoardCompletedEventArgs> GetBoardCompleted;
        
        public event System.EventHandler<GetNextShapeCompletedEventArgs> GetNextShapeCompleted;
        
        public event System.EventHandler<MoveBlockLeftCompletedEventArgs> MoveBlockLeftCompleted;
        
        public event System.EventHandler<MoveBlockRightCompletedEventArgs> MoveBlockRightCompleted;
        
        public event System.EventHandler<RotateBlockCompletedEventArgs> RotateBlockCompleted;
        
        public event System.EventHandler<MoveBlockDownCompletedEventArgs> MoveBlockDownCompleted;
        
        public event System.EventHandler<DropBlockCompletedEventArgs> DropBlockCompleted;
        
        public event System.EventHandler<GetScoreCompletedEventArgs> GetScoreCompleted;
        
        public event System.EventHandler<GetHighScoresCompletedEventArgs> GetHighScoresCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitScoreCompleted;
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginStartGame(TetrisClient.TetrisWebService.StartGameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartGame(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginStartGame(string player, System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.StartGameRequest inValue = new TetrisClient.TetrisWebService.StartGameRequest();
            inValue.player = player;
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginStartGame(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.StartGameResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndStartGame(System.IAsyncResult result) {
            return base.Channel.EndStartGame(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndStartGame(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.StartGameResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndStartGame(result);
            return retVal.StartGameResult;
        }
        
        private System.IAsyncResult OnBeginStartGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string player = ((string)(inValues[0]));
            return this.BeginStartGame(player, callback, asyncState);
        }
        
        private object[] OnEndStartGame(System.IAsyncResult result) {
            string[][] retVal = this.EndStartGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartGameCompleted(object state) {
            if ((this.StartGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartGameCompleted(this, new StartGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartGameAsync(string player) {
            this.StartGameAsync(player, null);
        }
        
        public void StartGameAsync(string player, object userState) {
            if ((this.onBeginStartGameDelegate == null)) {
                this.onBeginStartGameDelegate = new BeginOperationDelegate(this.OnBeginStartGame);
            }
            if ((this.onEndStartGameDelegate == null)) {
                this.onEndStartGameDelegate = new EndOperationDelegate(this.OnEndStartGame);
            }
            if ((this.onStartGameCompletedDelegate == null)) {
                this.onStartGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartGameCompleted);
            }
            base.InvokeAsync(this.onBeginStartGameDelegate, new object[] {
                        player}, this.onEndStartGameDelegate, this.onStartGameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginGetGameState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGameState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndGetGameState(System.IAsyncResult result) {
            return base.Channel.EndGetGameState(result);
        }
        
        private System.IAsyncResult OnBeginGetGameState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginGetGameState(callback, asyncState);
        }
        
        private object[] OnEndGetGameState(System.IAsyncResult result) {
            bool retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndGetGameState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGameStateCompleted(object state) {
            if ((this.GetGameStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGameStateCompleted(this, new GetGameStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGameStateAsync() {
            this.GetGameStateAsync(null);
        }
        
        public void GetGameStateAsync(object userState) {
            if ((this.onBeginGetGameStateDelegate == null)) {
                this.onBeginGetGameStateDelegate = new BeginOperationDelegate(this.OnBeginGetGameState);
            }
            if ((this.onEndGetGameStateDelegate == null)) {
                this.onEndGetGameStateDelegate = new EndOperationDelegate(this.OnEndGetGameState);
            }
            if ((this.onGetGameStateCompletedDelegate == null)) {
                this.onGetGameStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGameStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetGameStateDelegate, null, this.onEndGetGameStateDelegate, this.onGetGameStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginGetBoard(TetrisClient.TetrisWebService.GetBoardRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBoard(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetBoard(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.GetBoardRequest inValue = new TetrisClient.TetrisWebService.GetBoardRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginGetBoard(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.GetBoardResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndGetBoard(System.IAsyncResult result) {
            return base.Channel.EndGetBoard(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndGetBoard(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.GetBoardResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndGetBoard(result);
            return retVal.GetBoardResult;
        }
        
        private System.IAsyncResult OnBeginGetBoard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBoard(callback, asyncState);
        }
        
        private object[] OnEndGetBoard(System.IAsyncResult result) {
            string[][] retVal = this.EndGetBoard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBoardCompleted(object state) {
            if ((this.GetBoardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBoardCompleted(this, new GetBoardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBoardAsync() {
            this.GetBoardAsync(null);
        }
        
        public void GetBoardAsync(object userState) {
            if ((this.onBeginGetBoardDelegate == null)) {
                this.onBeginGetBoardDelegate = new BeginOperationDelegate(this.OnBeginGetBoard);
            }
            if ((this.onEndGetBoardDelegate == null)) {
                this.onEndGetBoardDelegate = new EndOperationDelegate(this.OnEndGetBoard);
            }
            if ((this.onGetBoardCompletedDelegate == null)) {
                this.onGetBoardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBoardCompleted);
            }
            base.InvokeAsync(this.onBeginGetBoardDelegate, null, this.onEndGetBoardDelegate, this.onGetBoardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginGetNextShape(TetrisClient.TetrisWebService.GetNextShapeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextShape(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetNextShape(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.GetNextShapeRequest inValue = new TetrisClient.TetrisWebService.GetNextShapeRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginGetNextShape(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.GetNextShapeResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndGetNextShape(System.IAsyncResult result) {
            return base.Channel.EndGetNextShape(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndGetNextShape(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.GetNextShapeResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndGetNextShape(result);
            return retVal.GetNextShapeResult;
        }
        
        private System.IAsyncResult OnBeginGetNextShape(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNextShape(callback, asyncState);
        }
        
        private object[] OnEndGetNextShape(System.IAsyncResult result) {
            string[][] retVal = this.EndGetNextShape(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextShapeCompleted(object state) {
            if ((this.GetNextShapeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextShapeCompleted(this, new GetNextShapeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextShapeAsync() {
            this.GetNextShapeAsync(null);
        }
        
        public void GetNextShapeAsync(object userState) {
            if ((this.onBeginGetNextShapeDelegate == null)) {
                this.onBeginGetNextShapeDelegate = new BeginOperationDelegate(this.OnBeginGetNextShape);
            }
            if ((this.onEndGetNextShapeDelegate == null)) {
                this.onEndGetNextShapeDelegate = new EndOperationDelegate(this.OnEndGetNextShape);
            }
            if ((this.onGetNextShapeCompletedDelegate == null)) {
                this.onGetNextShapeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextShapeCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextShapeDelegate, null, this.onEndGetNextShapeDelegate, this.onGetNextShapeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginMoveBlockLeft(TetrisClient.TetrisWebService.MoveBlockLeftRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveBlockLeft(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMoveBlockLeft(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.MoveBlockLeftRequest inValue = new TetrisClient.TetrisWebService.MoveBlockLeftRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginMoveBlockLeft(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.MoveBlockLeftResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndMoveBlockLeft(System.IAsyncResult result) {
            return base.Channel.EndMoveBlockLeft(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndMoveBlockLeft(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.MoveBlockLeftResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndMoveBlockLeft(result);
            return retVal.MoveBlockLeftResult;
        }
        
        private System.IAsyncResult OnBeginMoveBlockLeft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMoveBlockLeft(callback, asyncState);
        }
        
        private object[] OnEndMoveBlockLeft(System.IAsyncResult result) {
            string[][] retVal = this.EndMoveBlockLeft(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveBlockLeftCompleted(object state) {
            if ((this.MoveBlockLeftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveBlockLeftCompleted(this, new MoveBlockLeftCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveBlockLeftAsync() {
            this.MoveBlockLeftAsync(null);
        }
        
        public void MoveBlockLeftAsync(object userState) {
            if ((this.onBeginMoveBlockLeftDelegate == null)) {
                this.onBeginMoveBlockLeftDelegate = new BeginOperationDelegate(this.OnBeginMoveBlockLeft);
            }
            if ((this.onEndMoveBlockLeftDelegate == null)) {
                this.onEndMoveBlockLeftDelegate = new EndOperationDelegate(this.OnEndMoveBlockLeft);
            }
            if ((this.onMoveBlockLeftCompletedDelegate == null)) {
                this.onMoveBlockLeftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveBlockLeftCompleted);
            }
            base.InvokeAsync(this.onBeginMoveBlockLeftDelegate, null, this.onEndMoveBlockLeftDelegate, this.onMoveBlockLeftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginMoveBlockRight(TetrisClient.TetrisWebService.MoveBlockRightRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveBlockRight(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMoveBlockRight(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.MoveBlockRightRequest inValue = new TetrisClient.TetrisWebService.MoveBlockRightRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginMoveBlockRight(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.MoveBlockRightResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndMoveBlockRight(System.IAsyncResult result) {
            return base.Channel.EndMoveBlockRight(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndMoveBlockRight(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.MoveBlockRightResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndMoveBlockRight(result);
            return retVal.MoveBlockRightResult;
        }
        
        private System.IAsyncResult OnBeginMoveBlockRight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMoveBlockRight(callback, asyncState);
        }
        
        private object[] OnEndMoveBlockRight(System.IAsyncResult result) {
            string[][] retVal = this.EndMoveBlockRight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveBlockRightCompleted(object state) {
            if ((this.MoveBlockRightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveBlockRightCompleted(this, new MoveBlockRightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveBlockRightAsync() {
            this.MoveBlockRightAsync(null);
        }
        
        public void MoveBlockRightAsync(object userState) {
            if ((this.onBeginMoveBlockRightDelegate == null)) {
                this.onBeginMoveBlockRightDelegate = new BeginOperationDelegate(this.OnBeginMoveBlockRight);
            }
            if ((this.onEndMoveBlockRightDelegate == null)) {
                this.onEndMoveBlockRightDelegate = new EndOperationDelegate(this.OnEndMoveBlockRight);
            }
            if ((this.onMoveBlockRightCompletedDelegate == null)) {
                this.onMoveBlockRightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveBlockRightCompleted);
            }
            base.InvokeAsync(this.onBeginMoveBlockRightDelegate, null, this.onEndMoveBlockRightDelegate, this.onMoveBlockRightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginRotateBlock(TetrisClient.TetrisWebService.RotateBlockRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRotateBlock(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRotateBlock(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.RotateBlockRequest inValue = new TetrisClient.TetrisWebService.RotateBlockRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginRotateBlock(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.RotateBlockResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndRotateBlock(System.IAsyncResult result) {
            return base.Channel.EndRotateBlock(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndRotateBlock(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.RotateBlockResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndRotateBlock(result);
            return retVal.RotateBlockResult;
        }
        
        private System.IAsyncResult OnBeginRotateBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginRotateBlock(callback, asyncState);
        }
        
        private object[] OnEndRotateBlock(System.IAsyncResult result) {
            string[][] retVal = this.EndRotateBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRotateBlockCompleted(object state) {
            if ((this.RotateBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RotateBlockCompleted(this, new RotateBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RotateBlockAsync() {
            this.RotateBlockAsync(null);
        }
        
        public void RotateBlockAsync(object userState) {
            if ((this.onBeginRotateBlockDelegate == null)) {
                this.onBeginRotateBlockDelegate = new BeginOperationDelegate(this.OnBeginRotateBlock);
            }
            if ((this.onEndRotateBlockDelegate == null)) {
                this.onEndRotateBlockDelegate = new EndOperationDelegate(this.OnEndRotateBlock);
            }
            if ((this.onRotateBlockCompletedDelegate == null)) {
                this.onRotateBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRotateBlockCompleted);
            }
            base.InvokeAsync(this.onBeginRotateBlockDelegate, null, this.onEndRotateBlockDelegate, this.onRotateBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginMoveBlockDown(TetrisClient.TetrisWebService.MoveBlockDownRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveBlockDown(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMoveBlockDown(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.MoveBlockDownRequest inValue = new TetrisClient.TetrisWebService.MoveBlockDownRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginMoveBlockDown(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.MoveBlockDownResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndMoveBlockDown(System.IAsyncResult result) {
            return base.Channel.EndMoveBlockDown(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndMoveBlockDown(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.MoveBlockDownResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndMoveBlockDown(result);
            return retVal.MoveBlockDownResult;
        }
        
        private System.IAsyncResult OnBeginMoveBlockDown(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMoveBlockDown(callback, asyncState);
        }
        
        private object[] OnEndMoveBlockDown(System.IAsyncResult result) {
            string[][] retVal = this.EndMoveBlockDown(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveBlockDownCompleted(object state) {
            if ((this.MoveBlockDownCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveBlockDownCompleted(this, new MoveBlockDownCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveBlockDownAsync() {
            this.MoveBlockDownAsync(null);
        }
        
        public void MoveBlockDownAsync(object userState) {
            if ((this.onBeginMoveBlockDownDelegate == null)) {
                this.onBeginMoveBlockDownDelegate = new BeginOperationDelegate(this.OnBeginMoveBlockDown);
            }
            if ((this.onEndMoveBlockDownDelegate == null)) {
                this.onEndMoveBlockDownDelegate = new EndOperationDelegate(this.OnEndMoveBlockDown);
            }
            if ((this.onMoveBlockDownCompletedDelegate == null)) {
                this.onMoveBlockDownCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveBlockDownCompleted);
            }
            base.InvokeAsync(this.onBeginMoveBlockDownDelegate, null, this.onEndMoveBlockDownDelegate, this.onMoveBlockDownCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginDropBlock(TetrisClient.TetrisWebService.DropBlockRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDropBlock(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDropBlock(System.AsyncCallback callback, object asyncState) {
            TetrisClient.TetrisWebService.DropBlockRequest inValue = new TetrisClient.TetrisWebService.DropBlockRequest();
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginDropBlock(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.DropBlockResponse TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndDropBlock(System.IAsyncResult result) {
            return base.Channel.EndDropBlock(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndDropBlock(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.DropBlockResponse retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndDropBlock(result);
            return retVal.DropBlockResult;
        }
        
        private System.IAsyncResult OnBeginDropBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDropBlock(callback, asyncState);
        }
        
        private object[] OnEndDropBlock(System.IAsyncResult result) {
            string[][] retVal = this.EndDropBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDropBlockCompleted(object state) {
            if ((this.DropBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DropBlockCompleted(this, new DropBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DropBlockAsync() {
            this.DropBlockAsync(null);
        }
        
        public void DropBlockAsync(object userState) {
            if ((this.onBeginDropBlockDelegate == null)) {
                this.onBeginDropBlockDelegate = new BeginOperationDelegate(this.OnBeginDropBlock);
            }
            if ((this.onEndDropBlockDelegate == null)) {
                this.onEndDropBlockDelegate = new EndOperationDelegate(this.OnEndDropBlock);
            }
            if ((this.onDropBlockCompletedDelegate == null)) {
                this.onDropBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDropBlockCompleted);
            }
            base.InvokeAsync(this.onBeginDropBlockDelegate, null, this.onEndDropBlockDelegate, this.onDropBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginGetScore(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScore(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndGetScore(System.IAsyncResult result) {
            return base.Channel.EndGetScore(result);
        }
        
        private System.IAsyncResult OnBeginGetScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginGetScore(callback, asyncState);
        }
        
        private object[] OnEndGetScore(System.IAsyncResult result) {
            int retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndGetScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScoreCompleted(object state) {
            if ((this.GetScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScoreCompleted(this, new GetScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScoreAsync() {
            this.GetScoreAsync(null);
        }
        
        public void GetScoreAsync(object userState) {
            if ((this.onBeginGetScoreDelegate == null)) {
                this.onBeginGetScoreDelegate = new BeginOperationDelegate(this.OnBeginGetScore);
            }
            if ((this.onEndGetScoreDelegate == null)) {
                this.onEndGetScoreDelegate = new EndOperationDelegate(this.OnEndGetScore);
            }
            if ((this.onGetScoreCompletedDelegate == null)) {
                this.onGetScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScoreCompleted);
            }
            base.InvokeAsync(this.onBeginGetScoreDelegate, null, this.onEndGetScoreDelegate, this.onGetScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginGetHighScores(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHighScores(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndGetHighScores(System.IAsyncResult result) {
            return base.Channel.EndGetHighScores(result);
        }
        
        private System.IAsyncResult OnBeginGetHighScores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginGetHighScores(callback, asyncState);
        }
        
        private object[] OnEndGetHighScores(System.IAsyncResult result) {
            TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndGetHighScores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHighScoresCompleted(object state) {
            if ((this.GetHighScoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHighScoresCompleted(this, new GetHighScoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHighScoresAsync() {
            this.GetHighScoresAsync(null);
        }
        
        public void GetHighScoresAsync(object userState) {
            if ((this.onBeginGetHighScoresDelegate == null)) {
                this.onBeginGetHighScoresDelegate = new BeginOperationDelegate(this.OnBeginGetHighScores);
            }
            if ((this.onEndGetHighScoresDelegate == null)) {
                this.onEndGetHighScoresDelegate = new EndOperationDelegate(this.OnEndGetHighScores);
            }
            if ((this.onGetHighScoresCompletedDelegate == null)) {
                this.onGetHighScoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHighScoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetHighScoresDelegate, null, this.onEndGetHighScoresDelegate, this.onGetHighScoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginSubmitScore(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitScore(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndSubmitScore(System.IAsyncResult result) {
            base.Channel.EndSubmitScore(result);
        }
        
        private System.IAsyncResult OnBeginSubmitScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginSubmitScore(callback, asyncState);
        }
        
        private object[] OnEndSubmitScore(System.IAsyncResult result) {
            ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndSubmitScore(result);
            return null;
        }
        
        private void OnSubmitScoreCompleted(object state) {
            if ((this.SubmitScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitScoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitScoreAsync() {
            this.SubmitScoreAsync(null);
        }
        
        public void SubmitScoreAsync(object userState) {
            if ((this.onBeginSubmitScoreDelegate == null)) {
                this.onBeginSubmitScoreDelegate = new BeginOperationDelegate(this.OnBeginSubmitScore);
            }
            if ((this.onEndSubmitScoreDelegate == null)) {
                this.onEndSubmitScoreDelegate = new EndOperationDelegate(this.OnEndSubmitScore);
            }
            if ((this.onSubmitScoreCompletedDelegate == null)) {
                this.onSubmitScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitScoreCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitScoreDelegate, null, this.onEndSubmitScoreDelegate, this.onSubmitScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TetrisClient.TetrisWebService.TetrisWebServiceSoap.BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TetrisClient.TetrisWebService.TetrisWebServiceSoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = ((TetrisClient.TetrisWebService.TetrisWebServiceSoap)(this)).EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TetrisClient.TetrisWebService.TetrisWebServiceSoap CreateChannel() {
            return new TetrisWebServiceSoapClientChannel(this);
        }
        
        private class TetrisWebServiceSoapClientChannel : ChannelBase<TetrisClient.TetrisWebService.TetrisWebServiceSoap>, TetrisClient.TetrisWebService.TetrisWebServiceSoap {
            
            public TetrisWebServiceSoapClientChannel(System.ServiceModel.ClientBase<TetrisClient.TetrisWebService.TetrisWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginStartGame(TetrisClient.TetrisWebService.StartGameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("StartGame", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.StartGameResponse EndStartGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.StartGameResponse _result = ((TetrisClient.TetrisWebService.StartGameResponse)(base.EndInvoke("StartGame", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGameState(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGameState", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetGameState(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetGameState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBoard(TetrisClient.TetrisWebService.GetBoardRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetBoard", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.GetBoardResponse EndGetBoard(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.GetBoardResponse _result = ((TetrisClient.TetrisWebService.GetBoardResponse)(base.EndInvoke("GetBoard", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextShape(TetrisClient.TetrisWebService.GetNextShapeRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetNextShape", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.GetNextShapeResponse EndGetNextShape(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.GetNextShapeResponse _result = ((TetrisClient.TetrisWebService.GetNextShapeResponse)(base.EndInvoke("GetNextShape", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMoveBlockLeft(TetrisClient.TetrisWebService.MoveBlockLeftRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MoveBlockLeft", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.MoveBlockLeftResponse EndMoveBlockLeft(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.MoveBlockLeftResponse _result = ((TetrisClient.TetrisWebService.MoveBlockLeftResponse)(base.EndInvoke("MoveBlockLeft", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMoveBlockRight(TetrisClient.TetrisWebService.MoveBlockRightRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MoveBlockRight", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.MoveBlockRightResponse EndMoveBlockRight(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.MoveBlockRightResponse _result = ((TetrisClient.TetrisWebService.MoveBlockRightResponse)(base.EndInvoke("MoveBlockRight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRotateBlock(TetrisClient.TetrisWebService.RotateBlockRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RotateBlock", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.RotateBlockResponse EndRotateBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.RotateBlockResponse _result = ((TetrisClient.TetrisWebService.RotateBlockResponse)(base.EndInvoke("RotateBlock", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMoveBlockDown(TetrisClient.TetrisWebService.MoveBlockDownRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MoveBlockDown", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.MoveBlockDownResponse EndMoveBlockDown(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.MoveBlockDownResponse _result = ((TetrisClient.TetrisWebService.MoveBlockDownResponse)(base.EndInvoke("MoveBlockDown", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDropBlock(TetrisClient.TetrisWebService.DropBlockRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DropBlock", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.DropBlockResponse EndDropBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.DropBlockResponse _result = ((TetrisClient.TetrisWebService.DropBlockResponse)(base.EndInvoke("DropBlock", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetScore(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetScore", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHighScores(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHighScores", _args, callback, asyncState);
                return _result;
            }
            
            public TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult EndGetHighScores(System.IAsyncResult result) {
                object[] _args = new object[0];
                TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult _result = ((TetrisClient.TetrisWebService.GetHighScoresResponseGetHighScoresResult)(base.EndInvoke("GetHighScores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitScore(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SubmitScore", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SubmitScore", _args, result);
            }
            
            public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
        }
    }
}
